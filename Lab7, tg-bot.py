import telebot
import psycopg2
import datetime
from telebot import types


token = "<—Ç–æ–∫–µ–Ω>"
bot = telebot.TeleBot(token)
schedule = types.ReplyKeyboardMarkup(resize_keyboard=True)
schedule.row("–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±")
schedule.row("–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è", "–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è")
conn = psycopg2.connect(database="schedule_db", user="postgres",
                        password="1234", host="localhost", port="5432")
cursor = conn.cursor()
weekday = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]


def datatime(day, week):
    s = '_'*12+'\n'
    daytime = day + week*6
    cursor.execute("SELECT ls_start_time, sub_name, room_numb, full_name FROM timetable m, subjects, lesson_begin, teacher t WHERE day='%s' and m.sub_t=sub_id and sub_id=t.sub_t and les_n=start_time order by 1" % str(daytime))
    records = list(cursor.fetchall())
    for i in records:
        for j in i:
            s += f'&lt{j}&gt '
        s += "\n"
    if s.find("&lt") == -1:
        s += "<s>–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π –≤ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å</s>\n"
    return s


def subjt():
    s = ''
    cursor.execute(
        "SELECT sub_name, full_name FROM subjects, teacher WHERE sub_id=sub_t")
    records = list(cursor.fetchall())
    for i in records:
        s += f"{i[0]} - {i[1]}\n"
    return s


@bot.message_handler(commands=['week'])
def debug(message):
    week = (message.date-1675026000)//604800+1
    if (week % 2 == 0):
        weeks = "—á—ë—Ç–Ω–∞—è"
    else:
        weeks = "–Ω–µ—á—ë—Ç–Ω–∞—è"
    bot.send_message(message.chat.id, f'–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: {week}, {weeks}')
    # –Ω–∞—á–∞–ª–æ —Å–µ–º–µ—Å—Ç—Ä–∞ 1675026000


@bot.message_handler(commands=['mtuci'])
def start_message(message):
    keyboard = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏üåê", url="https://mtuci.ru/")
    keyboard.add(b1)
    bot.send_message(
        message.chat.id, '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú–¢–£–°–ò ‚Äì https://mtuci.ru/', reply_markup=keyboard)


@bot.message_handler(commands=['find'])
def start_message(message):
    t = ''
    s = message.text.replace("/find ", "")
    if s[0] == "–ê":
        t += "–ö–æ—Ä–ø—É—Å –Ω–∞ –ê–≤–∏–∞–º–æ—Ç–æ—Ä–Ω–æ–π, "
        if s[2] == "–°":
            t += "—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª."
        elif s[2] == "–í":
            t += "–≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä " + s[5] + " —ç—Ç–∞–∂."
        elif s[2] == "–õ":
            t += "–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π –∫–æ—Ä–ø—É—Å " + s[4] + " —ç—Ç–∞–∂."
        else:
            t += "–≥–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å " + s[2] + " —ç—Ç–∞–∂."
    elif s[0] == "–ù":
        t += "–ö–æ—Ä–ø—É—Å –Ω–∞ –ù–∞—Ä–æ–¥–Ω–æ–º –æ–ø–æ–ª—á–µ–Ω–∏–∏, "
        if s[2] == "–°":
            t += "—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª."
        elif s[2] == "–í":
            t += "–≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä " + s[5] + " —ç—Ç–∞–∂."
        elif s[2] == "–õ":
            t += "–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π –∫–æ—Ä–ø—É—Å " + s[4] + " —ç—Ç–∞–∂."
        else:
            t += "–≥–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å " + s[2] + " —ç—Ç–∞–∂."
    else:
        t += "–ö–∞–±–∏–Ω–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω"
    bot.send_message(message.chat.id, f'–ö–∞–±–∏–Ω–µ—Ç {s} —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –∑–¥–µ—Å—å:\n{t}')


@bot.message_handler(content_types=['sticker'])
def emoji(message):
    bot.send_message(message.chat.id, "üëã")


@bot.message_handler(commands=['subjects'])
def start_message(message):
    s = subjt()
    bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —É—á–∏—Ç–µ–ª—è:\n{s}')


@bot.message_handler(commands=['start'])
def debug(message):
    bot.send_message(message.chat.id, '<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å–≤—Ç—É—é!</b> –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏',
                     reply_markup=schedule, parse_mode="HTML")


@bot.message_handler(commands=['help'])
def start_message(message):
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–π –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏–ª–∏ –Ω–µ–¥–µ–ª—é, —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –¥–∞–Ω–Ω–æ–º —Å–µ–º–µ—Å—Ç—Ä–µ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú–¢–£–°–ò', reply_markup=schedule)


@bot.message_handler(content_types=['text'])
def answer(message):
    if message.text.lower() == "–ø–Ω":
        s = datatime(1, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "–≤—Ç":
        s = datatime(2, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "—Å—Ä":
        s = datatime(3, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "—á—Ç":
        s = datatime(4, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "–ø—Ç":
        s = datatime(5, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "—Å–±":
        s = datatime(6, ((message.date-1675026000)//604800) % 2)
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É, –Ω–µ–¥–µ–ª—è ‚Ññ{(message.date-1675026000)//604800+1}\n{s}', parse_mode="HTML")
    elif message.text.lower() == "—Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è":
        s = '_'*12+'\n'
        for i in range(1, 7):
            s += str(weekday[i-1])+"\n"
            s += datatime(i, ((message.date-1675026000)//604800) % 2) + '\n'
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é\n{s}', parse_mode="HTML")
    elif message.text.lower() == "—Å–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è":
        s = '_'*12+'\n'
        for i in range(1, 7):
            s += str(weekday[i-1])+"\n"
            s += datatime(i, ((message.date-1675026000)//604800+1) % 2) + '\n'
        bot.send_message(
            message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é\n{s}', parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª.')


bot.infinity_polling()
